{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortText","setSortText","isReverse","setIsReverse","sortedGoods","goods","readyGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getReadyGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,kBAAAA,E,SAAAA,M,KAsDE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA7CR,SAAuBC,EAAvB,GAA8E,IAApCL,EAAmC,EAAnCA,SAAUE,EAAyB,EAAzBA,UAC9CI,EAAU,YAAOD,GAsCrB,OApCIL,GACFM,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXZ,GAAYE,IACdI,EAAWC,MAAK,SAACC,EAAOC,GACtB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAIbN,EAAaA,EAAWO,WAGT,KAAbb,GAAmBE,IACrBI,EAAaT,EAAgBgB,WAGxBP,EAMaQ,CAAcjB,EAAiB,CAAEG,WAAUE,cAe/D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAYL,EAASc,WACpCO,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAaJ,EAASc,WAJtC,iCAUA,wBACEM,QAAS,kBAAMf,EAAYL,EAASgB,SACpCK,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAaJ,EAASgB,SAJtC,4BAUA,wBACEI,QArCR,WAEIb,GADED,IAqCEe,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAA0B,IAAdhB,IAJhB,sBAUEF,GAAYE,IACZ,wBACEc,QAxCV,WACEf,EAAY,IACZE,GAAa,IAuCLc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCvIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28f6e943.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  reverse = 'reverse',\n  none = '',\n}\n\ninterface SomeParams{\n  sortText: string;\n  isReverse: boolean;\n}\n\nfunction getReadyGoods(goods: string[], { sortText, isReverse }: SomeParams) {\n  let readyGoods = [...goods];\n\n  if (sortText) {\n    readyGoods.sort((good1, good2) => {\n      switch (sortText) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (sortText && isReverse) {\n    readyGoods.sort((good1, good2) => {\n      switch (sortText) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    readyGoods = readyGoods.reverse();\n  }\n\n  if (sortText === '' && isReverse) {\n    readyGoods = goodsFromServer.reverse();\n  }\n\n  return readyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortText, setSortText] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n  const sortedGoods = getReadyGoods(goodsFromServer, { sortText, isReverse });\n\n  function reverseFunc() {\n    if (isReverse) {\n      setIsReverse(false);\n    } else {\n      setIsReverse(true);\n    }\n  }\n\n  function resetFunc() {\n    setSortText('');\n    setIsReverse(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortText(SortType.alphabet)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortText !== SortType.alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortText(SortType.length)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortText !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseFunc}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': isReverse !== true,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortText || isReverse) && (\n          <button\n            onClick={resetFunc}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}